// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  phone    String @unique
  name     String
  password String

  File File[]

  role             Role      @default(USER)
  isVerified       Boolean   @default(false)
  verificationCode Int?
  verificationDate DateTime?
  orders           Order[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  Reviews          Review[]
}

enum Role {
  USER
  ADMIN
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url String
  key String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Image {
  id         Int      @id @default(autoincrement())
  url        String
  key        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  product    Product? @relation(fields: [productId], references: [id])
  productId  Int?
}

model Review {
  id      Int    @id @default(autoincrement())
  // name       String
  comment String
  rating  Int

  user      User?    @relation(fields: [user_id], references: [id])
  user_id   Int?
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Order {
  id              Int     @id @default(autoincrement())
  userId          String
  amount          Float
  status          String?
  deliveryStatus  String?
  paymentIntentId String? @unique
  // products         CartProductType[]
  // address         Address?

  user       User?    @relation(fields: [user_id], references: [id])
  user_id    Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  brand       String
  category    String
  inStock     Boolean  @default(true)
  images      Image[]
  reviews     Review[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

// type CartProductType {
//   id            String
//   name          String
//   description   String
//   category      String
//   brand         String
//   selectedImage Image
//   quantity      Int
//   price         Float
// }

// type Image {
//   color     String
//   colorCode String
//   image     String
// }

// type Address {
//   city        String
//   country     String
//   line1       String
//   line2       String
//   postal_code String
//   state       String
// }
